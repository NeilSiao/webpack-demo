const path = require('path');
const {
  CleanWebpackPlugin
} = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const copyWebpackPlugin = require('copy-webpack-plugin');
const webpack = require('webpack');

// "dependencies": {
//   "bootstrap": "^4.5.3",
//   "jquery": "^3.5.1",
//   "jquery-ui": "^1.12.1",
//   "popper": "^1.0.1",
//   "typed.js": "^2.0.11",
//   "webpack": "^5.11.1",
//   "webpack-cli": "^4.3.1"
// },
// "devDependencies": {
//   "autoprefixer": "^10.1.0",
//   "clean-webpack-plugin": "^3.0.0",
//   "copy-webpack-plugin": "^7.0.0",
//   "css-loader": "^5.0.1",
//   "file-loader": "^6.2.0",
//   "html-webpack-plugin": "^5.0.0-beta.1",
//   "mini-css-extract-plugin": "^1.3.3",
//   "postcss-loader": "^4.1.0",
//   "resolve-url-loader": "^3.1.2",
//   "sass": "^1.32.0",
//   "sass-loader": "^10.1.0",
//   "style-loader": "^2.0.0",
//   "url-loader": "^4.1.1",
//   "webpack-dev-server": "^3.11.1"

/**
 * npm i autoprefixer clean-webpack-plugin copy-webpack-plugin css-loader file-loader postcss-loader resolve-url-loader sass sass-loader style-loader url-loader webpack-dev-server html-webpack-plugin mini-css-extract-plugin 
 * 
 * # resolve-url-loader is use to fixing css attribute in sass file. to look up correct relative file location.
 * # postcss-loader needs postcss.config.js file in root directory.
 */
module.exports = {
  mode: 'development',
  devtool: 'inline-source-map',  /*  used for debug js file. */
  devServer: {
    contentBase: './dist' 
  },
  entry: {
    vendor: [path.resolve(__dirname, 'src/js/vendor.js')],
    index: [path.resolve(__dirname, 'src/js/index.js')],
    arrangeSeat: [path.resolve(__dirname, 'src/js/arrangeSeat.js')],
  },
  output: {
    publicPath: '/',
    filename: '[name].[contenthash].js',
    path: path.resolve(__dirname, 'dist')
  },
  plugins: [
    new webpack.ProvidePlugin({
      $: 'jQuery',
      Typed: 'typed.js'
    }),
    new CleanWebpackPlugin(),
    new MiniCssExtractPlugin({
      filename: './css/[name].[contenthash].css',
    }),
    new copyWebpackPlugin({
      patterns:[
        {from: './src/icons', to: './icons'},
        {from: './src/img', to: './img'}
      ]
    }),
    new HtmlWebpackPlugin({
      title: '排教室系統',
      template: './src/index.html',
      filename: 'index.html',
      chunks: ['index','vendor'],
      favicon: './src/icons/cogwheel.png'
    }),
    new HtmlWebpackPlugin({
      title: '教室座位排列',
      chunks: ['arrangeSeat', 'vendor'],  /* entries chunks*/
      filename: 'arrangeSeat.html',
      template: './src/arrangeSeat.html',
    })
  ],
  module: {
    rules: [{
        test: /\.(jpg|jpeg|gif|png)$/i,
        type: 'asset/resource', /** webpack 5 */
      },
      {
        test: /\.(scss)$/,
        use: [{
            // Adds CSS to the DOM by injecting a `<style>` tag
            loader: 'style-loader'
          },
          {
            // Interprets `@import` and `url()` like `import/require()` and will resolve them
            loader: 'css-loader',
            options: {
              url: false,
            }
          },
          {
            // Loader for webpack to process CSS with PostCSS
            loader: 'postcss-loader',
          },
          {
            // Loads a SASS/SCSS file and compiles it to CSS
            loader: 'sass-loader'
          }
        ]
      }
    ],

  },
  optimization: {
    moduleIds: 'deterministic',
    runtimeChunk: 'single',
    splitChunks: {
      cacheGroups: {
        vendor: {
          test: /[\\/]node_modules[\\/]/,
          name: 'vendors',
          chunks: 'all',
        }
      }
    }
  }
}